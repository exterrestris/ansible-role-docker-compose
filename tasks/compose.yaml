---
- name: create project directory
  file:
    dest: "{{ _docker_compose_project_dir }}"
    state: directory
    owner: "{{ _docker_compose_project_owner }}"
    group: "{{ _docker_compose_project_group }}"
    mode: "{{ _docker_compose_project_dir_mode }}"

- block:
    - name: generate docker-compose
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ _docker_compose_project_dir }}/docker-compose.yaml"
        owner: "{{ _docker_compose_project_owner }}"
        group: "{{ _docker_compose_project_group }}"
        mode: "{{ _docker_compose_project_mode }}"
      with_first_found:
        - docker-compose-{{ docker_compose_schema_version }}.yaml.j2
        - docker-compose.yaml.j2

    - name: pull docker images
      community.docker.docker_image:
        name: "{{ container.image.name if container.image is mapping else container.image }}"
        tag: "{{ container.image.tag | default('latest') if container.image is mapping else 'latest' }}"
        source: pull
      loop: "{{ _docker_compose_containers }}"
      loop_control:
        loop_var: container
      when: _docker_compose_pull_images

    - name: create volume bind mounts
      block:
        - set_fact:
            _docker_compose_bind_mounts: "{{ _docker_compose_containers
                                          | selectattr('volumes', 'defined')
                                          | map(attribute='volumes')
                                          | flatten
                                          | selectattr('source', 'defined') }}"

        - ansible.builtin.file:
            dest: "{{ volume.source if volume.source.startswith('/') else _docker_compose_project_dir ~ '/' ~ volume.source }}"
            state: "{{ volume.state | default('directory') }}"
            owner: "{{ volume.owner | default(omit) }}"
            group: "{{ volume.group | default(omit) }}"
            mode: "{{ volume.mode | default(omit) }}"
          loop: "{{ _docker_compose_bind_mounts }}"
          loop_control:
            loop_var: volume
          when:
            - (volume.type | default('bind')) == 'bind'
            - volume.create | default(true) 
      when: _docker_compose_create_mounts

    - name: start docker compose
      community.docker.docker_compose:
        state: present
        project_src: "{{ _docker_compose_project_dir }}"
      when: _docker_compose_autostart
  when: _docker_compose_containers | length > 0
